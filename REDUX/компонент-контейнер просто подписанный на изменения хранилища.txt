Упрощение компонента-контейнера

Иногда компонент-контейнер должен просто подписаться на обновления хранилища и ему не нужны методы, 
подобные componentDidMount(). Нужен только метод render(), чтобы передать состояние вниз в компонент-представление. 
В этом случае, компонент-контейнер можно реализовать следующим образом:

import React from 'react';
import { connect } from 'react-redux';
import UserList from '../views/list-user';

const mapStateToProps = function(store) {
  return {
    users: store.userState.users
  };
}

export default connect(mapStateToProps)(UserList);

Да, народ, это весь файл компонента. Но стойте, где компонент-контейнер? И почему мы не использовали React.createClass()?

Оказывается, функция connect() создает для нас компонент. 
Обратите внимание, что на этот раз мы передаем ей компонент-представление напрямую. 
Компоненты-контейнеры существуют только для того, чтобы позволить компоненту-представлению сосредоточиться на отображении, 
они передают свое состояние в компонент-представление. И функция connect() именно это и делает. 
Она передает состояние (в виде свойств) в компонент-представление и фактически возвращает новый компонент-обертку. 
В сущности, эта обертка и представляет собой компонент-контейнер.


https://getinstance.info/articles/react/learning-react-redux/